<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Mac下利用hexo+github搭建个人博客]]></title>
    <url>%2F2019%2F04%2F07%2F%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E4%B8%80%E6%8F%BD%E5%AD%90%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[很久之前就萌生搭建一个自己的博客的想法了，中途因为一些原因搁置了（其实是懒），最近终于下定决心搭建一个自己的博客了。下面介绍自己在搭建博客过程中遇到的一些问题以及解决方案 前期准备github账号 没有的话可以去GitHub申请一个 生成ssh key 首先你要检测自己电脑是否存在 SSH key在终端输出: cd ~/.ssh如果你本地没有生成的话，终端会显示：-bash: cd: /Users/glamor/.ssh: No such file or directory说明你之前没有用过，直接执行第二步。如果之前用过需要清理原来的rsa，执行命令mkdir key_backup $ cp id_rsa* key_backup $ rm id_rsa* 如果本地没有的话，我们要自己手动生成ssh keyssh-keygen -t rsa -C &quot;your_email@example.com&quot;“your_email@example.com“上填写你在github上注册的邮箱成功后终端上面会显示结果如下： 12345678910111213141516171819202122232425262728293031Generating public/private rsa key pair.Enter file in which to save the key (/Users/xxx/.ssh/id_rsa):Created directory &apos;/Users/glamor/.ssh&apos;.Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /Users/glamor/.ssh/id_rsa.Your public key has been saved in /Users/glamor/.ssh/id_rsa.pub.The key fingerprint is:xxxxxxxxx(你自己的秘钥)The key&apos;s randomart image is: +---[RSA 2048]----+ | ..oo=. | | . ..=*o | | Boo*o.o | | B O*..o . | | * B. S+ | | +.o.o.o E | | .oo.o * | | ..oo . + | | o. . . | +----[SHA256]-----+ 通过/Users/glamor/.ssh/id_rsa.pub.路径找到刚刚生成的公钥。如果默认有些隐藏的文件不显示的话，使用defaults write com.apple.finder AppleShowAllFiles -bool true,命令，如果无法实时生效，建议点击小苹果，强制退出Finder，重启Finder后自然所有文件都看的到。强制退出后，finder会显示之前的隐藏文件夹，如果需要恢复隐藏的话按“Command + Shift + .” 登录Github账号，点击Settings，点进去找到Personal settings。点击SSH and GPG keys。向SSH服务器（github.com）Add自己的SSH Public Key后，github.com将这个SSH Key与你的github账号关联起来，你的机器（Mac git client）将有写权限向你github账号名下的remote repository进行push提交代码。点击New SSH key，title栏中随便写啥。把刚才生成的公钥内容粘贴到Key中。点击Add SSH key。 测试连接ssh -T git@github.com，出现 Hi JackLearning! You&#39;ve successfully authenticated, but GitHub does not provide shell access.说明连接成功。 设置用户信息。 12$ git config --global user.name &quot;你的github的用户名&quot;$ git config --global user.email &quot;你github的邮箱&quot; 下载nodejs建议下载10.15.4LTS版本,按步骤进行安装（疯狂点继续就行） 用hexo+github搭建博客生成hexo博客 打开终端，依次输入以下命令 1234567891011sudo su //然后输入密码，以管理员身份运行node -v //查看nodejs版本npm -v //查看包管理器版本npm install -g cnpm --registry=https://registry.npm.taobao.org //利用npm安装cnpm的淘宝镜像源,利用npm安装插件时总会出现一些难以名状的错误，建议以后都用cnpm来安装或者更新插件cnpm -v //查看cnpm版本cnpm install -g hexo-cli //进行hexo的安装hexo -v //检查hex版本mkdir blog //建立一个blog的文件夹cd blog/ //进入blog目录下sudo hexo init //初始化hexo，需要等待一会儿hexo s //启动hexo 此时终端中出现 INFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 将“http://localhost:4000” 复制到浏览器打开，可以看到hexo自动在本地生成了第一篇名为“Hello World”的博文。按住”control+c“停止。 下面只要把生成的博客部署到之前注册的github上就可以了。 将博客部署到github上 登录github 点击右上角“+”按钮，点击“New repository”,在“Repository name”上填写“user.name.github.io”,user.name上写上你的github的用户名，“Description”上写”我的博客“，然后点击下面的绿色按钮”Creat repositry“ 在终端上输入cnpm install --save hexo -deployer-git安装插件 装好了之后，在blog的目录下打开”_config.yml“这个文件进行修改。在文档的最下面找到 1234# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:type: 将它修改为 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:type: gitrepo: https://github.com/user.name/user.name.github.io.git //老规矩，user.name上填上你的github的用户名brach: master 需要注意的是”type:”,”repo:”,”branch:”都需要敲一个空格再进行修改保存文件 打开终端，输入命令hexo d命令执行完毕后，刷新一下之前打开的github界面发现多了一些内容 在浏览器打开”user.name.github.io”,发现自己的博客就这么轻松愉快的搭建好了 将github仓库与自己申请的域名绑定因为博主穷所以就没有申请自己的域名，等哪天发家了再出教程吧]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
